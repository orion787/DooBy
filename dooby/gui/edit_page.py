import tkinter as tk
from tkinter import ttk, messagebox

class EditWindow(tk.Toplevel):
    def __init__(self, parent_app, model_class, session, partner=None):
        super().__init__(parent_app.root)
        self.parent_app = parent_app
        self.model_class = model_class
        self.session = session
        self.partner = partner

        self.title("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞" if partner else "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞")

        self.fields = {}
        self.build_form()

    def build_form(self):
        labels = [
            ("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", "name"),
            ("–¢–∏–ø –ø–∞—Ä—Ç–Ω—ë—Ä–∞", "type"),
            ("–†–µ–π—Ç–∏–Ω–≥", "rating"),
            ("–ê–¥—Ä–µ—Å", "address"),
            ("–§–ò–û –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞", "director"),
            ("–¢–µ–ª–µ—Ñ–æ–Ω", "phone"),
            ("Email", "email")
        ]

        for i, (label_text, field_name) in enumerate(labels):
            ttk.Label(self, text=label_text).grid(row=i, column=0, sticky="w", padx=10, pady=5)
            entry = ttk.Entry(self, width=40)
            entry.grid(row=i, column=1, padx=10, pady=5)
            self.fields[field_name] = entry

        # –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ç–∏–ø–∞
        self.fields["type"].destroy()
        cb = ttk.Combobox(self, values=["–û–ø—Ç–æ–≤–∏–∫", "–†–æ–∑–Ω–∏—á–Ω—ã–π", "–î–∏—Å—Ç—Ä–∏–±—å—é—Ç–æ—Ä", "–û–û–û", "–û–ê–û", "–ó–ê–û"])
        cb.grid(row=1, column=1, padx=10, pady=5)
        self.fields["type"] = cb

        # –ö–Ω–æ–ø–∫–∏
        ttk.Button(self, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", command=self.save).grid(row=10, column=0, columnspan=2, pady=15)
        ttk.Button(self, text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", command=self.destroy).grid(row=11, column=0, columnspan=2)

        if self.partner:
            self.load_data()

    def load_data(self):
        """–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
        for field, widget in self.fields.items():
            widget.delete(0, tk.END)
            widget.insert(0, getattr(self.partner, field))

    def save(self):
        try:
            name = self.fields["name"].get().strip()
            type_ = self.fields["type"].get().strip()
            rating = int(self.fields["rating"].get().strip())
            address = self.fields["address"].get().strip()
            director = self.fields["director"].get().strip()
            phone = self.fields["phone"].get().strip()
            email = self.fields["email"].get().strip()

            if not name or rating < 0:
                raise ValueError("–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —Ä–µ–π—Ç–∏–Ω–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")

            if self.partner:
                partner = self.partner
            else:
                partner = self.model_class()

            partner.name = name
            partner.type = type_
            partner.rating = rating
            partner.address = address
            partner.director = director
            partner.phone = phone
            partner.email = email

            self.session.add(partner)
            self.session.commit()

            messagebox.showinfo("–£—Å–ø–µ—à–Ω–æ", "–î–∞–Ω–Ω—ã–µ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
            self.parent_app.refresh()
            self.destroy()

        except ValueError as ve:
            messagebox.showerror("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞", str(ve))
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n{e}")
